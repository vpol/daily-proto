version: 2.1

defaults: &defaults
  working_directory: /tmp/workflows

jobs:

  sync:
    <<: *defaults

    docker:
      - image: docker.io/vpol/daily-proto-docker-runner:latest

    steps:
      - run: | 
          echo "sync"

  env:
    <<: *defaults

    docker:
      - image: docker.io/vpol/daily-proto-docker-runner:latest

    steps:
      - checkout
      - run: |
          echo $CIRCLE_SHA1
          echo $CIRCLE_TAG

  lint-python:

    <<: *defaults

    docker:
      - image: docker.io/vpol/daily-proto-docker-runner:latest

    steps:
      - checkout
      - run: |
          python /build.py python .

  push-python:
    <<: *defaults

    docker:
      - image: docker.io/vpol/daily-proto-docker-runner:latest

    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workflows/env
      - run: |
          git clone https://${REPO_USER}:${REPO_TOKEN}@github.com/vpol/daily-proto-python --depth 20
          find ./daily-proto-python -type d -not -path './daily-proto-python/.git*' -not -path './daily-proto-python' | xargs rm  -rf {}
          python /build.py python .
      - run: |
          cd daily-proto-python
          git push --set-upstream origin main
          git config credential.helper 'cache --timeout=120'
          git config user.email "vpoluksht@gmail.com"
          git config user.name "Viktor Poluksht"
          git add .
          git commit --allow-empty -m "${CIRCLE_SHA1:0:7}: protobuf update"
          export TAG=dev-${CIRCLE_SHA1}
          git tag $TAG
          git remote set-url origin https://${REPO_USER}:${REPO_TOKEN}@github.com/vpol/daily-proto-python.git
          git push -q https://${REPO_USER}:${REPO_TOKEN}@github.com/vpol/daily-proto-python main --tags
          echo "PYTHON_HASH=`git rev-parse --verify HEAD`" >> /tmp/workflows/env/python-vars
      - persist_to_workspace:
          root: env
          paths:
            - python-vars

  tag-python:

    <<: *defaults

    docker:
      - image: docker.io/vpol/daily-proto-docker-runner:latest

    steps:
      - attach_workspace:
          at: /tmp/workflows/env
      - run: cat env/python-vars >> $BASH_ENV
      - run: |
          echo "tag-python"

  lint-go:

    <<: *defaults

    docker:
      - image: docker.io/vpol/daily-proto-docker-runner:latest

    steps:
      - checkout
      - run: |
          python /build.py go .

  push-go:
    <<: *defaults

    docker:
      - image: docker.io/vpol/daily-proto-docker-runner:latest

    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workflows/env
      - run: |
          mkdir -p github.com/vpol/daily-proto-go
          cd github.com/vpol/
          git clone https://${REPO_USER}:${REPO_TOKEN}@github.com/vpol/daily-proto-go --depth 20
          find ./daily-proto-go -type d -not -path './daily-proto-go/.git*' -not -path './daily-proto-go' -not -path './daily-proto-go/go.mod' -not -path './daily-proto-go/go.sum' | xargs rm  -rf {}
          cd ../..
          python /build.py go .
      - run: |
          cd github.com/vpol/daily-proto-go
          git push --set-upstream origin main
          git config credential.helper 'cache --timeout=120'
          git config user.email "vpoluksht@gmail.com"
          git config user.name "Viktor Poluksht"
          git add .
          git commit --allow-empty -m "${CIRCLE_SHA1:0:7}: protobuf update"
          export TAG=dev-${CIRCLE_SHA1}
          git tag $TAG
          git remote set-url origin https://${REPO_USER}:${REPO_TOKEN}@github.com/vpol/daily-proto-go.git
          git push -q https://${REPO_USER}:${REPO_TOKEN}@github.com/vpol/daily-proto-go main --tags
          echo "GO_HASH=`git rev-parse --verify HEAD`" >> /tmp/workflows/env/go-vars
      - persist_to_workspace:
          root: env
          paths:
            - go-vars

  tag-go:

    <<: *defaults

    docker:
      - image: docker.io/vpol/daily-proto-docker-runner:latest

    steps:
      - attach_workspace:
          at: /tmp/workflows/env
      - run: cat env/go-vars >> $BASH_ENV
      - run: |
          echo $GO_HASH

  lint-ts:

    <<: *defaults

    docker:
      - image: docker.io/vpol/daily-proto-docker-runner:latest

    steps:
      - checkout
      - run: |
          python /build.py ts .


  push-ts:
    <<: *defaults

    docker:
      - image: docker.io/vpol/daily-proto-docker-runner:latest

    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workflows/env
      - run: |
          mkdir -p github.com/vpol/daily-proto-ts
          cd github.com/vpol/
          git clone https://${REPO_USER}:${REPO_TOKEN}@github.com/vpol/daily-proto-ts --depth 20
          cd ../..
          python /build.py ts .
      - run: |
          cd github.com/vpol/daily-proto-ts
          git push --set-upstream origin main
          git config credential.helper 'cache --timeout=120'
          git config user.email "vpoluksht@gmail.com"
          git config user.name "Viktor Poluksht"
          git add .
          git commit --allow-empty -m "${CIRCLE_SHA1:0:7}: protobuf update"
          export TAG=dev-${CIRCLE_SHA1}
          git tag $TAG
          git remote set-url origin https://${REPO_USER}:${REPO_TOKEN}@github.com/vpol/daily-proto-ts.git
          git push -q https://${REPO_USER}:${REPO_TOKEN}@github.com/vpol/daily-proto-ts main --tags
          echo "TS_HASH=`git rev-parse --verify HEAD`" >> /tmp/workflows/env/ts-vars
      - persist_to_workspace:
          root: env
          paths:
            - ts-vars

  tag-ts:

    <<: *defaults

    docker:
      - image: docker.io/vpol/daily-proto-docker-runner:latest

    steps:
      - attach_workspace:
          at: /tmp/workflows/env
      - run: cat env/ts-vars >> $BASH_ENV
      - run: |
          mkdir -p github.com/vpol/daily-proto-ts
          cd github.com/vpol/
          git clone https://${REPO_USER}:${REPO_TOKEN}@github.com/vpol/daily-proto-ts --depth 20
          git push --set-upstream origin main
          git config credential.helper 'cache --timeout=120'
          git config user.email "vpoluksht@gmail.com"
          git config user.name "Viktor Poluksht"
          export TAG=dev-${CIRCLE_SHA1}
          export RTAG=`git rev-list -n 1 ${TAG}`
          git tag $CIRCLE_TAG $RTAG
          git remote set-url origin https://${REPO_USER}:${REPO_TOKEN}@github.com/vpol/daily-proto-ts.git
          git push -q https://${REPO_USER}:${REPO_TOKEN}@github.com/vpol/daily-proto-ts main --tags
          echo $TS_HASH

workflows:

  tag-only:

    - tag-go:
        context: github
        requires:
          - sync
        filters:
          tags:
            only:
              - /^v.*/
          branches:
            ignore: /.*/

    - tag-python:
        context: github
        requires:
          - sync
        filters:
          tags:
            only:
              - /^v.*/
          branches:
            ignore: /.*/

    - tag-ts:
        context: github
        requires:
          - sync
        filters:
          tags:
            only:
              - /^v.*/
          branches:
            ignore: /.*/


  build-and-update:

    jobs:

      - lint-go:
          filters:
            branches:
              only:
                - main

      - push-go:
          context: github
          requires:
            - lint-go
          filters:
            branches:
              only:
                - main

      - lint-python:
          filters:
            branches:
              only:
                - main

      - push-python:
          context: github
          requires:
            - lint-python
          filters:
            branches:
              only:
                - main


      - lint-ts:
          filters:
            branches:
              only:
                - main

      - push-ts:
          context: github
          requires:
            - lint-ts
          filters:
            branches:
              only:
                - main

      - sync:
          requires:
            - push-go
            - push-python
            - push-ts
          filters:
            branches:
              only:
                - main

      - tag-go:
          context: github
          requires:
            - sync
          filters:
            tags:
              only:
                - /^v.*/

      - tag-python:
          context: github
          requires:
            - sync
          filters:
            tags:
              only:
                - /^v.*/

      - tag-ts:
          context: github
          requires:
            - sync
          filters:
            tags:
              only:
                - /^v.*/

